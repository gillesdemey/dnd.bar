/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SessionsNewImport } from './routes/sessions/new'
import { Route as SessionsLayoutImport } from './routes/sessions/_layout'

// Create Virtual Routes

const SessionsImport = createFileRoute('/sessions')()
const IndexLazyImport = createFileRoute('/')()
const SessionsSessionIdLazyImport = createFileRoute('/sessions/$sessionId')()

// Create/Update Routes

const SessionsRoute = SessionsImport.update({
  path: '/sessions',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SessionsSessionIdLazyRoute = SessionsSessionIdLazyImport.update({
  path: '/$sessionId',
  getParentRoute: () => SessionsRoute,
} as any).lazy(() =>
  import('./routes/sessions/$sessionId.lazy').then((d) => d.Route),
)

const SessionsNewRoute = SessionsNewImport.update({
  path: '/new',
  getParentRoute: () => SessionsRoute,
} as any)

const SessionsLayoutRoute = SessionsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => SessionsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sessions': {
      id: '/sessions'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsImport
      parentRoute: typeof rootRoute
    }
    '/sessions/_layout': {
      id: '/sessions/_layout'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsLayoutImport
      parentRoute: typeof SessionsRoute
    }
    '/sessions/new': {
      id: '/sessions/new'
      path: '/new'
      fullPath: '/sessions/new'
      preLoaderRoute: typeof SessionsNewImport
      parentRoute: typeof SessionsImport
    }
    '/sessions/$sessionId': {
      id: '/sessions/$sessionId'
      path: '/$sessionId'
      fullPath: '/sessions/$sessionId'
      preLoaderRoute: typeof SessionsSessionIdLazyImport
      parentRoute: typeof SessionsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  SessionsRoute: SessionsRoute.addChildren({
    SessionsNewRoute,
    SessionsSessionIdLazyRoute,
  }),
})

/* prettier-ignore-end */
